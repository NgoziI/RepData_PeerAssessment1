with(airquality[airquality$Month==6,], points(Ozone,Wind, col = "green",pch = 5))
with(airquality[airquality$Month==6,], points(Ozone,Wind, col = "green",pch = 12))
with(airquality[airquality$Month==6,], points(Ozone, col = "green",pch = 12))
with(airquality[airquality$Month==6,], points(Ozone,Wind, col = "green",pch = 12))
with(airquality[airquality$Month==6,], plot(Ozone,Wind, main = "Ngozi's Test"))
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
with(airquality[airquality$Month==6,], points(Ozone,Wind, col = "green",pch = 12))
with(airquality[airquality$Month==6,], points(Ozone, col = "green",pch = 12))
par(mfrow = c(1,2))
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
mtext("mmmmmmmmmkkkhohhhh")
mtext("mmmmmmmmmkkkhohhhh")
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
mtext("mmmmmmmmmkkkhohhhh")
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
mtext("mmmmmmmmmkkkhohhhh")
mtext("mmmmmmmmmkkkhohhhh", outer = TRUE)
mtext("mmmmmmmmmkkkhohhhh", outer = TRUE)
par(mfrow = c(1,2),oma = c(0,2,0,0))
mtext("mmmmmmmmmkkkhohhhh", outer = TRUE)
par(mfrow = c(1,2),oma = c(0,2,0,0))
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
mtext("mmmmmmmmmkkkhohhhh", outer = TRUE)
par(mfrow = c(1,2),oma = c(0,0,2,0))
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
mtext("mmmmmmmmmkkkhohhhh", outer = TRUE)
with(airquality, plot(Ozone,Wind, main = "Ngozi's Test"))
mtext("mmmmmmmmmkkkhohhhh", outer = TRUE)
mtext("mmmmmmmmmkkkhohhhh")
tempfile()
?tempfile()
tempfile(c("ab", "a b c"))
temp <- tempfile()
source('~/.active-rstudio-document')
?unzip
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
unzip("C:/MyLibrary/Data Science/Exploratory Analysis/Fhousehold_power_consumption.zip")
temp <- tempfile()
?download.file()
download.file(fileUrl,temp)
str(temp)
data <- read.table(unz(temp, "household_power_consumption.txt"))
?unzip
unzip("C:/MyLibrary/Data Science/Exploratory Analysis/Fhousehold_power_consumption.zip")
unzip("C:/MyLibrary/Data Science/Exploratory Analysis/Fhousehold_power_consumption.zip",unzip = "unzip")
? read.csv
z <- strptime("20/2/06 11:16:16.683", "%d/%m/%y %H:%M:%OS")
class(z)
z <- 6
class(z)
source('C:/MyLibrary/Data Science/Exploratory Analysis/Practice.R')
source('C:/MyLibrary/Data Science/Exploratory Analysis/Practice.R')
source('C:/MyLibrary/Data Science/Exploratory Analysis/Practice.R')
source('C:/MyLibrary/Data Science/Exploratory Analysis/Practice.R')
numeric
source('C:/MyLibrary/Data Science/Exploratory Analysis/Practice.R')
source('C:/MyLibrary/Data Science/Exploratory Analysis/Practice.R')
data
class(data$Date)
source('C:/MyLibrary/Data Science/Exploratory Analysis/Practice.R')
str(data)
fileUrl <-"C:/MyLibrary/Data Science/Exploratory Analysis/Fhousehold_power_consumption/household_power_consumption.txt"
read.csv(fileUrl,sep = ";")[1:10,]
Sub_metering_1
read.csv(fileUrl,sep = ";")$Sub_metering_1
read.csv(fileUrl,sep = ";")[1:2,]
read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[1] == "16/12/2006"]
read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[1] == "16/12/2006",]
read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[1] == "01/02/2007" | read.csv(fileUrl,sep = ";")[1] == "02/02/2007" ,]
read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[1] == 16/12/2006 ,]
read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[[1]] == "01/02/2007" | read.csv(fileUrl,sep = ";")[[1]] == "02/02/2007" ,]
read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[[1]] == "16/12/2006",]
idata <- read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[[1]] == "16/12/2006",]
idata <- read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[[1]] == "01/02/2007",]
idata <- read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[[1]] == "02/02/2007",]
?unique
unique(read.csv(fileUrl,sep = ";")[[1]])
idata <- read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[[1]] == "1/2/2007",]
idata <- read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[[1]] == "1/2/2007" | read.csv(fileUrl,sep = ";")[[1]] == "2/2/2007",]
unique(idata[[1]])
head(idata)
tail(idata)
idata$Date <- as.date(idata$Date)
idata$Date <- as.Date(idata$Date)
class(idata$Date)
idata$Time <- strptime(idata$Time)
idata$Time <- strptime(idata$Time, format = "%H:%M:%S")
class(idata$Time)
str(idata)
table(idata)
table(idata[[1]])
names(idata)
idata[[7]]
table(idata[[7]])
unique(idata[[7]])
unique(idata[[7]])
summary(idata[[7]])
idata[[7]] <- as.numeric(idata[[7]])
summary(idata[[7]])
unique(idata[[7]])
table(idata[[7]])
table(idata[[7]],idata[[1]])
table(format(idata[[7]],"%d%m%Y"),idata[[1]])
table(idata[[7]],idata[[1]])
any(idata$Date)
any(idata$Date == ?)
any(idata$Date == "?)
)
""
any(idata$Date == "?")
any(idata$Global_active_power == "?")
any(idata$Global_active_power != "?")
any(idata$Global_active_power == "?")
names(idata)
summary(idata)
unique(idata$Sub_metering_2)
any(idata$Sub_metering_2 == "?")
class(idata$Sub_metering_2)
class(idata$Sub_metering_1)
head(idata)
head(idata$Date)
class(idata$Date)
class(idata$Time)
fileUrl <-"C:/MyLibrary/Data Science/Exploratory Analysis/Fhousehold_power_consumption/household_power_consumption.txt"
idata <- read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[[1]] == "1/2/2007" | read.csv(fileUrl,sep = ";")[[1]] == "2/2/2007",]
class(idata$Date)
head(idata,3)
tail(idata,3)
?as.Date
as.Date("2/2/2007",format="%d/%m/%Y")
as.Date("1/2/2007",format="%d/%m/%Y")
idata$Date <- as.Date(idata$Date)
fileUrl <-"C:/MyLibrary/Data Science/Exploratory Analysis/Fhousehold_power_consumption/household_power_consumption.txt"
idata <- read.csv(fileUrl,sep = ";")[read.csv(fileUrl,sep = ";")[[1]] == "1/2/2007" | read.csv(fileUrl,sep = ";")[[1]] == "2/2/2007",]
idata$Date <- as.Date(idata$Date,format="%d/%m/%Y")
head(idata,3)
tail(idata,3)
table(idata$Date,idata$Global_intensity)
any(idata$Global_intensity == "?")
any(idata$Global_active_power == "?")
any(idata$Global_reactive_power == "?")
any(idata$Voltage == "?")
any(idata$Global_intensity == "?")
any(idata$Sub_metering_1 == "?")
any(idata$Sub_metering_2 == "?")
any(idata$Sub_metering_3 == "?")
names(idata)
idata$Time <- strptime(idata$Time, format = "%H:%M:%S")
idata$Time <- strptime(idata$Time, format = "%H:%M:%S")
class(idata$Time)
fileUrl <-"C:/MyLibrary/Data Science/Exploratory Analysis/Fhousehold_power_consumption/household_power_consumption.txt"
idata <- read.csv(fileUrl,sep = ";" ,colnames=c("Date","POSIXlt","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))[read.csv(fileUrl,sep = ";")[[1]] == "1/2/2007" | read.csv(fileUrl,sep = ";")[[1]] == "2/2/2007",]
fileUrl <-"C:/MyLibrary/Data Science/Exploratory Analysis/Fhousehold_power_consumption/household_power_consumption.txt"
idata <- read.csv(fileUrl,sep = ";" ,colClasses = c("Date","POSIXlt","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))[read.csv(fileUrl,sep = ";")[[1]] == "1/2/2007" | read.csv(fileUrl,sep = ";")[[1]] == "2/2/2007",]
idata <- read.csv(fileUrl,sep = ";" ,colClasses = c("Date","POSIXlt","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
idata <- read.csv(fileUrl,sep = ";" )
any(idata$Date == "?")
any(idata$Time == "?")
any(idata$Global_active_power == "?")
any(idata$Global_reactive_power == "?")
any(idata$Global_reactive_power == "?" & idata$Date == "2/2/2007")
any(idata$Global_reactive_power == "?" & idata$Date == "1/2/2007")
any(idata$Global_intensity == "?" & idata$Date == "1/2/2007")
any(idata$Sub_metering_1 == "?" & idata$Date == "1/2/2007")
any(idata$Sub_metering_1 == "?")
idata$Date[(idata$Sub_metering_1 == "?"),]
idata$Date[(idata$Sub_metering_1 == "?")]
table(idata$Date[(idata$Sub_metering_1 == "?")])
table(idata$Date[(idata$Sub_metering_1 == "?")])
table((idata$Sub_metering_1 == "?"))
head((idata[idata$Sub_metering_1 == "?"]))
head(idata[idata$Sub_metering_1 == "?"])
head(idata[idata$Sub_metering_1 == "?"],)
head(idata[idata$Sub_metering_1 == "?",])
head(idata[idata$Sub_metering_1 == "?",])[[1]]
table(head(idata[idata$Sub_metering_1 == "?",])[[1]])
n <-table(head(idata[idata$Sub_metering_1 == "?",])[[1]])
table(n)
n
table(n)
idata$Sub_metering_1 == "?
""
)
idata$Sub_metering_1 == "?"
head(idata$Sub_metering_1 == "?")
length(idata$Sub_metering_1 == "?")
length(idata$Date[idata$Sub_metering_1 == "?"])
table(idata$Sub_metering_1 == "?")
n <-idata[idata$Sub_metering_1 == "?",]
table(n$Date,n$Sub_metering_1)
nrow(n)
n$Sub_metering_1
with(n$Sub_metering_1)
with(idata$Sub_metering_1 == "?")
which(idata$Sub_metering_1 == "?")
idata[c(1618510,1618511,1618512,1618513,1618514,1618515),]
idata$Date[c(1618510,1618511,1618512,1618513,1618514,1618515)]
table(idata$Date[c(1618510,1618511,1618512,1618513,1618514,1618515)])
idata$Date <- as.Date(idata$Date,format="%d/%m/%Y")
table(idata$Date[(idata$Sub_metering_1 == "?")])
table(idata$Date[(idata$Sub_metering_1 == "?")])
?factor
xyplot(Ozone ~ Wind)
library(lattice)
xyplot(Ozone ~ Wind)
library(datasets)
xyplot(Ozone ~ Wind)
xyplot(Ozone ~ Wind)
library(lattice)
data(datasets)
data(dataset)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind|month, data = airquality)
xyplot(Ozone ~ Wind|Month, data = airquality)
xyplot(Ozone ~ Wind|Month, data = airquality,layout=c(1,5))
xyplot(Ozone ~ Wind|Month, data = airquality,layout=c(5,1))
library(ggplot2)
data()
str(mpg)
library(ggplot2)
str(mpg)
qplot(hwy,data = mpg, fill=drv)
qplot(hwy,cyl,data = mpg, fill=drv)
qplot(hwy,displ,data = mpg, fill=drv)
qplot(hwy,displ,data = mpg, fill=drv, geom = c("point"))
qplot(hwy,displ,data = mpg, fill=drv, geom = c("point","smooth"))
qplot(hwy,data = mpg, fill=drv, geom = c("point","smooth"))
qplot(hwy,data = mpg, fill=drv, geom = c("smooth"))
qplot(hwy,data = mpg, fill=drv)
qplot(hwy,data = mpg, fill=drv,geom = "density")
qplot(hwy,data = mpg, fill=drv,geom = "density",fill="")
qplot(hwy,data = mpg, fill=drv,geom = "density",fill="f1")
qplot(hwy,data = mpg, fill=drv,geom = "density",fill="model")
qplot(hwy,data = mpg,geom = "density",fill="model")
qplot(hwy,data = mpg,geom = "density",fill="model",color=drv)
qplot(hwy,data = mpg,geom = "density",color=drv)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
install.packages(nlme)
install.packages("nlme")
library(nlme)
install.packages("nlme")
xyplot(weight ~ Time | Diet, BodyWeight)
str(BodyWeight)
?ylim
?type
?plot
?cut
?cut2
??cut2
?quantile
seq(0,1,length =4)
seq(0,1,length =3)
seq(0,1,length =2)
?cut
quantile(5:100,seq(5,100,length = 10))
quantile(5:100,seq(0,1,length = 10))
seq(0,1,length = 10)
class(quantile(5:100,seq(0,1,length = 10)))
cut(rnorm(20),quantile(5:100,seq(0,1,length = 10)))
cut(10:200,quantile(5:100,seq(0,1,length = 10)))
seq(10,120,step = 10)
seq(10,50)
cut(seq(10,50),c(21,38))
cut(seq(10,50),c(5,21,38,51))
cut(seq(10,50),10
)
cut(seq(10,50),c(5,21,38,51),labels=c("cut1","cut2","cut3","cut4"))
cut(seq(10,50),c(5,21,38,51),labels=c("cut1","cut2","cut3"))
library(nlme)
str(nlme)
data(nlme)
data()
str(BodyWeight)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
axis("fffjjj")
text(c("yAxis",xAxis))
text(c("yAxis","xAxis))
)
text(c("yAxis","xAxis"))
data(airquality)
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality,smooth = "loess")
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality,smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
set.seed(1234)
par(mar=c(0,0,0,0))
rep(1:3 each = 4)
rep(1:3, each = 4)
rnorm(12,mmean = , sd = 0.2)
rnorm(12,mean = , sd = 0.2)
x <- rnorm(12,mean = , sd = 0.2)
x <- rnorm(12,mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12,mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x,y)
plot(x,y,col ="blue")
plot(x,y,col ="blue",pch=19)
plot(x,y,col ="blue",pch=19,cex=2)
text(labels = as.character(1:12))
text(x,y,labels = as.character(1:12))
text(x+0.05,y+0.05,labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
dataFrame
distxy <- dist(dataFrame)
distxy
hClustering <- hclust(distxy)
hClustering
plot(hClustering)
source('~/.active-rstudio-document')
myplclust(hClustering)
kmeans(dataFrame, centers=3)
n <- kmeans(dataFrame, centers=3)
class(n)
n
class(n$cluster)
plot(x,y, col=n$cluster)
plot(x,y, col=n$cluster,pch =19)
plot(x,y, col=n$cluster,pch =19,cex=2)
plot(x,y, col=n$cluster,pch =19,cex=3)
plot(x,y, col=n$cluster,pch =19,cex=3,lwd=3)
library(kernlab)
install.packages("kernlab")
library(kernlab)
head(spam)
data(spam)
head(spam)
head(spam[,1:5])
str(spam[,1:5])
source('C:/MyLibrary/Data Science/Exploratory Analysis/ExploratoryDataAnalysis_CourseProject2/WorkingFolder/exdata-data-NEI_data/plot1.R')
set.seed(3435)
table(trainindicator)
table(spam)
cls
libray(ggplot2)
library(ggplot2)
str(diamonds)
min(diamonds$carat)
head(diamonds)
head(diamonds$cut)
unique(diamonds$cut)
unique(diamonds$color)
table(diamonds$color)
class(diamonds$color)
class(diamonds[1])
diamonds[1]
diamonds[1,]
diamonds[,1]
diamonds[,1:6]
library(ggplot2)
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
geom <- c("point", "smooth")
class(geom)
qplot(displ,hwy,data=mpg,geom = c("point", "smooth"))
unique(mpg$hwy)
qplot(hwy,data=mpg,geom = c("point", "smooth"))
qplot(hwy,data=mpg)
str(mpg$hwy)
table(mpg$hwy)
table(mpg$hwy.mpg$drv)
table(mpg$hwy,mpg$drv)
table(mpg$hwy,mpg$drv)
qplot(hwy,data=mpg,fill=drv)
qplot(hwy,data=mpg,binwidth = 2)
qplot(hwy,data=mpg,binwidth = 2,fill=drv
)
getwd
getwd()
getwd()
setwd("C:\MyLibrary\Data Science\Reproducible Research\repdata-data-activity")
setwd("C:/MyLibrary/Data Science/Reproducible Research/repdata-data-activity")
Activity <- read.csv("activity.csv")
dim(Activity)
str(Activity)
names(Activity)[1:3]
names(Activity)[1:2]
select(Activity,steps:interval)
library(dplyr)
select(Activity,steps:interval)
head(select(Activity,steps:interval))
head(select(Activity,steps:interval),1:3)
head(select(Activity,steps:interval))[1:3,]
head(select(Activity,steps:interval))[1:3]
names(Activity)[1:2]
names(Activity)
select(Activity,steps,interval)
head(select(Activity,steps,interval))
head(select(Activity,c(1,3)))
head(select(Activity,c(1,2)))
head(select(Activity,[1:3])
head(select(Activity,[1:3]))
head(select(Activity,1:3))
head(select(Activity,(1:3))
)
head(select(Activity,-(1:2)))
class(Activity[1])
class(Activity[[1]])
summary(Activity[[1]])
table(Activity[[1]])
names(Activity)
names(Activity) <- c('steps1','date1','interval1')
names(Activity)
rm Activity
rm
getwd()
Activity <- read.csv("activity.csv")
setwd("C:/MyLibrary/Data Science/Reproducible Research/RepData_PeerAssessment1")
Activity <- read.csv("activity.csv")
setwd("C:/MyLibrary/Data Science/Reproducible Research/RepData_PeerAssessment1/activity")
Activity <- read.csv("activity.csv")
src(Activity)
names(Activity)
head(Activity)[3]
head(Activity)[3,]
head(Activity)[1:3,]
nrow(Activity)
str(Activity)
tail(Activity)
head(Activity)
table(Activity$steps)
str(Activity)
table(Activity$date)
x <- mean(Activity$steps)
x <- mean(Activity$steps, rm.na = TRUE)
xy <- mean(Activity$steps, rm.na = TRUE)
xy <- mean(Activity$steps, na.rm = TRUE)
summary(Activity)
max(Activity$steps)
max(Activity$steps, na.rm = TRUE)
filter(Activity, steps != NA)
str(Activity)
group_by(Activity,date)
group_by(Activity,date)%>%summarize(TotalperDay = sum(steps, na.rm = TRUE))
tail(group_by(Activity,date)%>%summarize(TotalperDay = sum(steps, na.rm = TRUE)))
head(group_by(Activity,date)%>%summarize(TotalperDay = sum(steps, na.rm = TRUE)))
summarize(Activity,TotalperDay = sum(steps, na.rm = TRUE))
summary(Activity)
summarize(Activity,TotalperDay = count(steps, na.rm = TRUE))
count(Activity)
count(Activity, na.rm = TRUE)
count(Activity$steps, na.rm = TRUE)
sum(Activity$steps, na.rm = TRUE)
TotalStepPerDay <- head(group_by(Activity,date) %>%
summarize(TotalperDay = sum(steps, na.rm = TRUE)))
TotalStepPerDay
tail(TotalStepPerDay)
table(Activity$date)
table(Activity$date,Activity$steps)
tail(table(Activity$date,Activity$steps))
TotalStepPerDay <- head(group_by(Activity,date) %>%
summarize(TotalperDay = sum(steps, na.rm = TRUE)))
TotalStepPerDay
as.POSIXlt(Activity$date)
class(as.POSIXlt(Activity$date))
head(as.POSIXlt(Activity$date))
TotalStepPerDay <- mutate(Activity, date = as.POSIXlt(date)) %>%
group_by(date) %>%
summarize(TotalperDay = sum(steps, na.rm = TRUE))
TotalStepPerDay <- mutate(Activity, date = as.POSIXlt(date)$mon) %>%
group_by(date) %>%
summarize(TotalperDay = sum(steps, na.rm = TRUE))
TotalStepPerDay
class(as.POSIXlt(Activity$date))
unclass(as.POSIXlt(Activity$date))
names(as.POSIXlt(Activity$date))
as.POSIXlt(Activity$date)$mon
as.POSIXlt(Activity$date)$day
as.POSIXlt(Activity$date)$time
unlist(unclass(as.POSIXlt(Activity$date)))
weekdays(as.POSIXlt(Activity$date))
? DateTimeClasses
TotalStepPerDay <- mutate(Activity, date = as.POSIXlt(date)$mday) %>%
group_by(date) %>%
summarize(TotalperDay = sum(steps, na.rm = TRUE))
TotalStepPerDay
TotalStepPerDay <- mutate(Activity, date = as.POSIXlt(date)$yday) %>%
group_by(date) %>%
summarize(TotalperDay = sum(steps, na.rm = TRUE))
TotalStepPerDay
qplot(TotalperDay, data = TotalStepPerDay)
qplot(TotalperDay, data = TotalStepPerDay)
library(ggplot2)
qplot(TotalperDay, data = TotalStepPerDay)
qplot(TotalperDay, data = TotalStepPerDay,binwidth = 2)
qplot(TotalperDay, data = TotalStepPerDay,binwidth = 20)
qplot(TotalperDay, data = TotalStepPerDay,binwidth = 1000)
summary(TotalStepPerDay)
